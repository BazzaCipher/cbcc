---
import { type ContactUsSection } from 'types';

interface Props extends ContactUsSection {
  'data-sb-field-path'?: string;
}

const {
  title = 'Contact Us',
  subtitle = 'We’d love to hear from you. Please fill out the form below.',
} = Astro.props as Props;
const formAction = 'https://api.web3forms.com/submit';
const accessKey = 'f4d8f006-2233-4d8b-a682-38238c031487';
const siteOrigin = Astro.site ? new URL(Astro.site).origin : '';
const redirectUrl = `${siteOrigin}/thanks`;
---

<section
  class="bg-white py-16 px-6 md:px-12 lg:px-20"
  data-sb-field-path="contactusform"
>
	<div class="max-w-4xl mx-auto text-center">
		<h2 class="text-3xl md:text-4xl font-bold mb-4">{title}</h2>
		<p class="text-gray-600 mb-5">{subtitle}</p>
	</div>

	<form 
		action={formAction} 
		method="POST" 
		class="max-w-3xl mx-auto grid gap-6 mt-5"
		id="contact-form"
	>
    <input type="hidden" name="access_key" value={accessKey} />

	<div id="form-message" class="text-center mt-4 hidden">
		<p id="form-message-text" class="text-green-600 font-medium"></p>
	</div>

    <div class="grid md:grid-cols-2 gap-6">
		<input 
			type="text" 
			name="name" 
			placeholder="Name" 
			required 
			class="w-full border border-gray-300 px-4 py-3 rounded-lg focus:ring-2 focus:ring-blue-500"}
		/>
		<input 
			type="text" 
			name="email" 
			placeholder="Email" 
			pattern="[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-zA-Z.]{2,}$"
			required 
			class="w-full border border-gray-300 px-4 py-3 rounded-lg focus:ring-2 focus:ring-blue-500"}
		/>

		<input 
			type="tel" 
			name="phonenumber" 
			placeholder="Phone number" 
			pattern="\d+"
			class="w-full border border-gray-300 px-4 py-3 rounded-lg focus:ring-2 focus:ring-blue-500"}
		/>
		<input 
			type="text" 
			name="postcode" 
			placeholder="Postcode" 
			pattern="[0-9]{4}"
			class="w-full border border-gray-300 px-4 py-3 rounded-lg focus:ring-2 focus:ring-blue-500"}
		/>
    </div>

    <textarea 
      name="message" 
      rows="6" 
      placeholder="Your message" 
      required 
      class="w-full border border-gray-300 px-4 py-3 rounded-lg focus:ring-2 focus:ring-blue-500"}
    ></textarea>

	<div>
		<label for="attachment" class="text-center block text-sm font-medium text-gray-600">If you have any further information or images, feel free to provide them below:</label>
		<div
		id="dropzone"
		class="mt-2 flex justify-center rounded-lg border border-dashed border-gray-300 px-6 py-10 transition
		hover:border-blue-400 focus-within:border-blue-500 focus-within:ring-2 focus-within:ring-blue-500/20"
		>
			<div class="text-center">
			<!-- Simple icon -->
			<svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-10 w-10" viewBox="0 0 24 24" fill="none" stroke="currentColor">
			<path stroke-width="1.5" d="M12 16V4m0 0 3.5 3.5M12 4 8.5 7.5M4 16v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-2" />
			</svg>

			<div class="mt-4 flex items-center justify-center text-sm">
			<label
			for="attachment"
			class="relative cursor-pointer rounded-md bg-white font-semibold text-blue-600 focus-within:outline-none
			focus-within:ring-2 focus-within:ring-blue-500 focus-within:ring-offset-2 hover:text-blue-700 px-2 py-1"
			>
			<span>Upload a file</span>
			<input
			id="attachment"
			name="attachment"
			type="file"
			class="sr-only"
			multiple
			accept=".pdf,.jpg,.jpeg,.png,.heic,.webp"
			/>
			</label>
		<p class="text-gray-600">or drag & drop</p>
		</div>

		<p class="mt-2 text-xs text-gray-500">PDF, PNG, JPG — up to 5MB</p>
		<p id="file-name" class="mt-3 text-sm text-gray-700 hidden"></p>
		<p id="file-error" class="mt-2 text-sm text-red-600 hidden"></p>
        </div>
      </div>
    </div>

    <div class="text-center">
      <button 
        type="submit" 
        class="bg-blue-600 text-white font-semibold px-8 py-3 rounded-lg hover:bg-blue-700 transition"}
      >
        Send Message
      </button>
    </div>

	<input type="checkbox" name="botcheck" class="hidden" style="display: none;">
	</form>
</section>

<script is:inline>
    const MAX_SIZE_MB = 5;
	const form = document.getElementById('contact-form');
	const msgBox = document.getElementById('form-message');
    const msgText = document.getElementById('form-message-text');

	form?.addEventListener('submit', async (e) => {
	e.preventDefault();
	const formData = new FormData(form);

	try {
		const response = await fetch(form.action, {
			method: 'POST',
			headers: { Accept: 'application/json' },
			body: formData
		});

		
	if (response.ok) {
		form.reset();
		msgText.textContent = 'Thank you! Your message has been sent.';
		msgText.className = 'text-green-600 font-medium';
		msgBox.classList.remove('hidden');
	} else {
		const json = await response.json();
		msgText.textContent = json.message || 'Something went wrong.';
		msgText.className = 'text-red-600 font-medium';
		msgBox.classList.remove('hidden');
	}
    } catch (err) {
		msgText.textContent = 'There was a network error.';
		msgText.className = 'text-red-600 font-medium';
		msgBox.classList.remove('hidden');
	}
	});
</script>
